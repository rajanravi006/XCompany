/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

group = 'com.crio'
version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	buildId = System.currentTimeMillis()
}

buildDir = '/tmp/external_build'

application {
    // Define the main class for the application.
    mainClass = 'com.crio.xcompany.XcompanyApplication'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

jar {
    archiveBaseName = 'example' //Please do not change this final artifact name
    version =  null              //Please do not change this final artifact version
    manifest {
        attributes 'Main-Class' : 'om.crio.xcompany.XcompanyApplication' //Change this to the main class of your program which will be executed
    }
    // To create a single jar with all dependencies.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

test { ///Please do not change this
    	reports {
		junitXml.enabled = true
		def destinationDirectory = System.getProperty("user.home") + "/.gradle/daemon/${buildId}/test-results"
		junitXml.destination = file(destinationDirectory)
		html.enabled = true
	}
	useJUnitPlatform()
	testLogging.events ("STANDARD_ERROR")
	testLogging.events ("STANDARD_OUT")
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\nTEST RESULT: ${result.resultType}"
			println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
					"${result.successfulTestCount} SUCCEEDED, " +
					"${result.failedTestCount} FAILED, " +
					"${result.skippedTestCount} SKIPPED"
		}
	}
}

//Add your dependencies here
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}